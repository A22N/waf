input {
  beats {
    port => 5044
  }

  tcp {
    port => 50000
  }
}

filter {
  # Phân tách các thành phần của bản ghi log
  grok {
    match => {
      "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] \[:%{WORD:loglevel}\] \[pid %{NUMBER:pid}\] \[client %{IP:client_ip}:%{NUMBER:client_port}\] \[client %{IP:client_ip2}\] ModSecurity: %{WORD:alert_type}. %{GREEDYDATA:message} \[file \"%{GREEDYDATA:file}\"\] \[line \"%{NUMBER:line}\"\] \[id \"%{NUMBER:rule_id}\"\] \[msg \"%{GREEDYDATA:msg}\"] \[ver \"%{GREEDYDATA:version}\"] \[tag \"%{GREEDYDATA:tags}\"] \[hostname \"%{IP:hostname}\"] \[uri \"%{URIPATH:uri}\"] \[unique_id \"%{GREEDYDATA:unique_id}\"](?:, referer: %{URIPROTO:referer_protocol}://%{URIHOST:referer_host}%{URIPATH:referer_path})?"
    }
  }

  # Chuyển đổi timestamp thành định dạng chuẩn của Elasticsearch
  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
  }

  # Sử dụng JSON filter để phân tích JSON nếu có
  json {
    source => "message"
    target => "json_parsed"
    tag_on_failure => ["_jsonparsefailure"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
  }

  if [tags] == "OWASP_CRS" {
    http {
      url => "https://api.telegram.org/bot7538124629:AAGFKHh47LtpIQA6X2sbe528_4YQR0GvRHk/sendMessage"
      http_method => "post"
      format => "json"
      message => '{"chat_id": "5880387394", "text": "ModSecurity Warning: %{message}"}'
    }
  }
}
